<html>
  <head>
  <style>

  .bar{
    fill: steelblue;
  }

  .bar:hover{
    fill: brown;
  }

  .axis {
    font: 10px sans-serif;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  </style>
  </head>
  <body>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script>
var hello=[
        {
            "score" : 0.7590955,
            "tone_id" : "anger",
            "tone_name" : "Anger"
        },
        {
            "score" : 0.015635,
            "tone_id" : "disgust",
            "tone_name" : "Disgust"
        },
        {
            "score" : 0.010866,
            "tone_id" : "fear",
            "tone_name" : "Fear"
        },
        {
            "score" : 0.007559,
            "tone_id" : "joy",
            "tone_name" : "Joy"
        },
        {
            "score" : 0.132897,
            "tone_id" : "sadness",
            "tone_name" : "Sadness"
        }
    ];

// set the dimensions of the canvas
var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 200 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

//var z = d3.scaleOrdinal().range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);
// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);


// add the SVG element
var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");


// load the data
d3.json(hello, function(error, data) {


    });
  
  // scale the range of the data
  x.domain(hello.map(function(d) { return d.tone_name; }));
  y.domain([0, d3.max(hello, function(d) { return d.score; })]);

  // add axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" )

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 10)
      .attr("dy", ".11em")
      .style("text-anchor", "end")
      .text("Frequency");


  // Add bar chart
  svg.selectAll("bar")
      .data(hello)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.tone_name); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.score); })
      .attr("height", function(d) { return height - y(d.score); });


</script>
  </body>
  </html>